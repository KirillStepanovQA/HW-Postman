//http://162.55.220.72:5005/first
//1. Отправить запрос.
//2. Статус код 200
//3. Проверить, что в body приходит правильный string.

pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});

pm.test("Body matches string", function () {
    pm.expect(pm.response.text()).to.include("This is the first responce from server!");
});

--------------------------------------------------------------------------------------------

//http://162.55.220.72:5005/user_info_3
//1. Отправить запрос.
//2. Статус код 200
//3. Спарсить response body в json.
//4. Проверить, что name в ответе равно name s request (name вбить руками.)
//5. Проверить, что age в ответе равно age s request (age вбить руками.)
//6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)
//7. Спарсить request.
//8. Проверить, что name в ответе равно name s request (name забрать из request.)
//9. Проверить, что age в ответе равно age s request (age забрать из request.)
//10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)
//11. Вывести в консоль параметр family из response.
//12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)

pm.test("Check_parameters_1", function () {
    let jsonData = pm.response.json();
    pm.expect(jsonData.name).to.eql("Kirill");
    pm.expect(jsonData.age).to.eql("35");
    pm.expect(jsonData.salary).to.eql(5000);
});

pm.test("Check_parameters_2", function () {
    let jsonData = pm.response.json();
    let req = request.data;
    pm.expect(jsonData.name).to.eql(req.name);
    pm.expect(jsonData.age).to.eql(req.age);
    pm.expect(jsonData.salary).to.eql(Number(req.salary));
});

let jsonData = pm.response.json();
console.log(jsonData.family);

pm.test("Check_parameters_3", function () {
    let jsonData = pm.response.json();
    let req = request.data;
    pm.expect(jsonData.family.u_salary_1_5_year).to.eql(req.salary * 4);
});

--------------------------------------------------------------------------------------------

//http://162.55.220.72:5005/object_info_3
//1. Отправить запрос.
//2. Статус код 200
//3. Спарсить response body в json.
//4. Спарсить request.
//5. Проверить, что name в ответе равно name s request (name забрать из request.)
//6. Проверить, что age в ответе равно age s request (age забрать из request.)
//7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)
//8. Вывести в консоль параметр family из response.
//9. Проверить, что у параметра dog есть параметры name.
//10. Проверить, что у параметра dog есть параметры age.
//11. Проверить, что параметр name имеет значение Luky.
//12. Проверить, что параметр age имеет значение 4.

let jsonData = pm.response.json();
let req = pm.request.url.query.toObject();

pm.test("Check_parameters_1", function () {
    pm.expect(jsonData.name).to.eql(req.name);
    pm.expect(jsonData.age).to.eql(req.age);
    pm.expect(jsonData.salary).to.eql(Number(req.salary));
});

console.log(jsonData.family);

pm.test("Check_dog_parameters", function () {
    pm.expect(jsonData.family.pets.dog).to.have.property("name");
    pm.expect(jsonData.family.pets.dog).to.have.property("age");
    pm.expect(jsonData.family.pets.dog.name).to.eql("Luky");
    pm.expect(jsonData.family.pets.dog.age).to.eql(4);
});

--------------------------------------------------------------------------------------------
//http://162.55.220.72:5005/object_info_4
//1. Отправить запрос.
//2. Статус код 200
//3. Спарсить response body в json.
//4. Спарсить request.
//5. Проверить, что name в ответе равно name s request (name забрать из request.)
//6. Проверить, что age в ответе равно age из request (age забрать из request.)
//7. Вывести в консоль параметр salary из request.
//8. Вывести в консоль параметр salary из response.
//9. Вывести в консоль 0-й элемент параметра salary из response.
//10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.
//11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.
//12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)
//13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)
//14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)
//15. Создать в окружении переменную name
//16. Создать в окружении переменную age
//17. Создать в окружении переменную salary
//18. Передать в окружение переменную name
//19. Передать в окружение переменную age
//20. Передать в окружение переменную salary
//21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.

pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});

let jsonData = pm.response.json();
let req = pm.request.url.query.toObject();

pm.test("Check_parameters_1", function () {
    pm.expect(jsonData.name).to.eql(req.name);
    pm.expect(jsonData.age).to.eql(Number(req.age));
});

console.log(req.salary);
console.log(jsonData.salary);
console.log(jsonData.salary[0]);
console.log(jsonData.salary[1]);
console.log(jsonData.salary[2]);

pm.test("Check_salary", function () {
    pm.expect(jsonData.salary[0]).to.eql(Number(req.salary));
    pm.expect(Number(jsonData.salary[1])).to.eql(Number(req.salary) * 2);
    pm.expect(Number(jsonData.salary[2])).to.eql(Number(req.salary) * 3);
});

pm.environment.set("name", req.name);
pm.environment.set("age", req.age);
pm.environment.set("salary", req.salary);

for (let i = 0; i++; i<jsonData.salary.length) {
    console.log(jsonData.salary[i]);
}

--------------------------------------------------------------------------------------------

//http://162.55.220.72:5005/user_info_2
//1. Вставить параметр salary из окружения в request
//2. Вставить параметр age из окружения в age
//3. Вставить параметр name из окружения в name
//4. Отправить запрос.
//5. Статус код 200
//6. Спарсить response body в json.
//7. Спарсить request.
//8. Проверить, что json response имеет параметр start_qa_salary
//9. Проверить, что json response имеет параметр qa_salary_after_6_months
//10. Проверить, что json response имеет параметр qa_salary_after_12_months
//11. Проверить, что json response имеет параметр qa_salary_after_1.5_year
//12. Проверить, что json response имеет параметр qa_salary_after_3.5_years
//13. Проверить, что json response имеет параметр person
//14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)
//15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)
//16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)
//17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)
//18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)
//19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)
//20. Проверить, что что параметр u_age равен age из request (age забрать из request.)
//21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)
//22. Написать цикл который выведет в консоль по порядку элементы списка из параметра person.

let jsonData = pm.response.json();
let req = request.data;

pm.test("Check_property", function () {
    pm.expect(jsonData).to.have.property("start_qa_salary");
    pm.expect(jsonData).to.have.property("qa_salary_after_6_months");
    pm.expect(jsonData).to.have.property("qa_salary_after_12_months");
    pm.expect(jsonData).to.have.property("qa_salary_after_1.5_year");
    pm.expect(jsonData).to.have.property("qa_salary_after_3.5_years");
    pm.expect(jsonData).to.have.property("person");
});

pm.test("Check_eql", function () {
    pm.expect(Number(jsonData.start_qa_salary)).to.eql(Number(req.salary));
    pm.expect(Number(jsonData.qa_salary_after_6_months)).to.eql(Number(req.salary) * 2);
    pm.expect(Number(jsonData.qa_salary_after_12_months)).to.eql(Number(req.salary) * 2.7);
    pm.expect(Number(jsonData["qa_salary_after_1.5_year"])).to.eql(Number(req.salary) * 3.3);
    pm.expect(Number(jsonData["qa_salary_after_3.5_years"])).to.eql(Number(req.salary) * 3.8);
    pm.expect(Number(jsonData.person.u_name[1])).to.eql(Number(req.salary));
    pm.expect(Number(jsonData.person.u_age)).to.eql(Number(req.age));
    pm.expect(Number(jsonData.person.u_salary_5_years)).to.eql(Number(req.salary) * 4.2);
});

for (let i in jsonData.person) {
    console.log(i + "=" + jsonData.person[i]);
}