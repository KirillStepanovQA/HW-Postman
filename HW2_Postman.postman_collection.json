{
	"info": {
		"_postman_id": "20050a38-d61c-47da-9f24-bab4f4359220",
		"name": "HW2_Postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20544815"
	},
	"item": [
		{
			"name": "First_Vadim",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/first\r",
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"//3. Проверить, что в body приходит правильный string.\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "User_info_3_Vadim",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/user_info_3\r",
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"//3. Спарсить response body в json.\r",
							"//4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"//5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"//6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"//7. Спарсить request.\r",
							"//8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"//9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"//10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"//11. Вывести в консоль параметр family из response.\r",
							"//12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"\r",
							"pm.test(\"Check_parameters_1\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Kirill\");\r",
							"    pm.expect(jsonData.age).to.eql(\"35\");\r",
							"    pm.expect(jsonData.salary).to.eql(5000);\r",
							"});\r",
							"\r",
							"pm.test(\"Check_parameters_2\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    let req = request.data;\r",
							"    pm.expect(jsonData.name).to.eql(req.name);\r",
							"    pm.expect(jsonData.age).to.eql(req.age);\r",
							"    pm.expect(jsonData.salary).to.eql(Number(req.salary));\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"console.log(jsonData.family);\r",
							"\r",
							"pm.test(\"Check_parameters_3\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    let req = request.data;\r",
							"    pm.expect(jsonData.family.u_salary_1_5_year).to.eql(req.salary * 4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Kirill",
							"type": "text"
						},
						{
							"key": "age",
							"value": "35",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "5000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Object_info_3_Vadim",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/object_info_3\r",
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"//3. Спарсить response body в json.\r",
							"//4. Спарсить request.\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"//6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"//7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"//8. Вывести в консоль параметр family из response.\r",
							"//9. Проверить, что у параметра dog есть параметры name.\r",
							"//10. Проверить, что у параметра dog есть параметры age.\r",
							"//11. Проверить, что параметр name имеет значение Luky.\r",
							"//12. Проверить, что параметр age имеет значение 4.\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"let req = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"Check_parameters_1\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(req.name);\r",
							"    pm.expect(jsonData.age).to.eql(req.age);\r",
							"    pm.expect(jsonData.salary).to.eql(Number(req.salary));\r",
							"});\r",
							"\r",
							"console.log(jsonData.family);\r",
							"\r",
							"pm.test(\"Check_dog_parameters\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"name\");\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"age\");\r",
							"    pm.expect(jsonData.family.pets.dog.name).to.eql(\"Luky\");\r",
							"    pm.expect(jsonData.family.pets.dog.age).to.eql(4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Kirill&age=35&salary=5000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Kirill"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "5000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Object_info_4_Vadim",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/object_info_4\r",
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"//3. Спарсить response body в json.\r",
							"//4. Спарсить request.\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"//6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"//7. Вывести в консоль параметр salary из request.\r",
							"//8. Вывести в консоль параметр salary из response.\r",
							"//9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"//10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"//11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"//12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"//13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"//14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"//15. Создать в окружении переменную name\r",
							"//16. Создать в окружении переменную age\r",
							"//17. Создать в окружении переменную salary\r",
							"//18. Передать в окружение переменную name\r",
							"//19. Передать в окружение переменную age\r",
							"//20. Передать в окружение переменную salary\r",
							"//21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"let req = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"Check_parameters_1\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(req.name);\r",
							"    pm.expect(jsonData.age).to.eql(Number(req.age));\r",
							"});\r",
							"\r",
							"console.log(req.salary);\r",
							"console.log(jsonData.salary);\r",
							"console.log(jsonData.salary[0]);\r",
							"console.log(jsonData.salary[1]);\r",
							"console.log(jsonData.salary[2]);\r",
							"\r",
							"pm.test(\"Check_salary\", function () {\r",
							"    pm.expect(jsonData.salary[0]).to.eql(Number(req.salary));\r",
							"    pm.expect(Number(jsonData.salary[1])).to.eql(Number(req.salary) * 2);\r",
							"    pm.expect(Number(jsonData.salary[2])).to.eql(Number(req.salary) * 3);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\", req.name);\r",
							"pm.environment.set(\"age\", req.age);\r",
							"pm.environment.set(\"salary\", req.salary);\r",
							"\r",
							"for (let i = 0; i++; i<jsonData.salary.length) {\r",
							"    console.log(jsonData.salary[i]);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Kirill&age=35&salary=5000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Kirill"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "5000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "User_info_2_Vadim",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//http://162.55.220.72:5005/user_info_2\r",
							"//1. Вставить параметр salary из окружения в request\r",
							"//2. Вставить параметр age из окружения в age\r",
							"//3. Вставить параметр name из окружения в name\r",
							"//4. Отправить запрос.\r",
							"//5. Статус код 200\r",
							"//6. Спарсить response body в json.\r",
							"//7. Спарсить request.\r",
							"//8. Проверить, что json response имеет параметр start_qa_salary\r",
							"//9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"//10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"//11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"//12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"//13. Проверить, что json response имеет параметр person\r",
							"//14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"//15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"//16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"//17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"//18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"//19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"//20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"//21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"//22. Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"let req = request.data;\r",
							"\r",
							"pm.test(\"Check_property\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"start_qa_salary\");\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_6_months\");\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_12_months\");\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"    pm.expect(jsonData).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check_eql\", function () {\r",
							"    pm.expect(Number(jsonData.start_qa_salary)).to.eql(Number(req.salary));\r",
							"    pm.expect(Number(jsonData.qa_salary_after_6_months)).to.eql(Number(req.salary) * 2);\r",
							"    pm.expect(Number(jsonData.qa_salary_after_12_months)).to.eql(Number(req.salary) * 2.7);\r",
							"    pm.expect(Number(jsonData[\"qa_salary_after_1.5_year\"])).to.eql(Number(req.salary) * 3.3);\r",
							"    pm.expect(Number(jsonData[\"qa_salary_after_3.5_years\"])).to.eql(Number(req.salary) * 3.8);\r",
							"    pm.expect(Number(jsonData.person.u_name[1])).to.eql(Number(req.salary));\r",
							"    pm.expect(Number(jsonData.person.u_age)).to.eql(Number(req.age));\r",
							"    pm.expect(Number(jsonData.person.u_salary_5_years)).to.eql(Number(req.salary) * 4.2);\r",
							"});\r",
							"\r",
							"for (let i in jsonData.person) {\r",
							"    console.log(i);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}